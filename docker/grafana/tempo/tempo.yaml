server:
  http_listen_port: 3200
  grpc_listen_port: 9096

distributor:
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "tempo:4417"
        http:
          endpoint: "tempo:4418"

storage:
  trace:
    backend: local
    wal:
      path: /var/tempo/wal
    local:
      path: /var/tempo/blocks

metrics_generator:
  registry:
      collection_interval: 30s                 # Create new metrics every 30s.
  processor:
    local_blocks:
      filter_server_spans: false
      flush_to_storage: true
    service_graphs:
      wait: 10s
      max_items: 10000
      workers: 2
      histogram_buckets: [0.01, 0.1, 0.25, 1, 5, 10, 30, 60, 120]
      dimensions:
        - ros.entity.type
        - ros.node.name
        - host.name
        - service.name
      enable_client_server_prefix: false
      enable_messaging_system_latency_histogram: true
      
  # Configures where the store for metrics is located.
  storage:
    # WAL for metrics generation.
    path: /var/tempo/generator/wal
    # Where to remote write metrics to.
    remote_write:
      - url: http://mimir:9009/api/v1/push  # URL of locally running Mimir instance.
        send_exemplars: true # Send exemplars along with their metrics.
  traces_storage:
    path: /var/tempo/generator/traces

overrides:
  metrics_generator_processors: ['service-graphs', 'local-blocks'] # The types of metrics generation to enable for each tenant.
